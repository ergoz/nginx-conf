#server {
#  server_name social.vinzv.de;
#  index index.php;
#  root /var/www/friendica;
#  rewrite ^ https://social.vinzv.de$request_uri? permanent;
#}

server {
                listen 80;
                server_name social.vinzv.de;
                rewrite ^ https://$server_name$request_uri? permanent;  # enforce https
}

##
# Configure Friendica with SSL
#
# All requests are routed to the front controller
# except for certain known file types like images, css, etc.
# Those are served statically whenever possible with a
# fall back to the front controller (needed for avatars, for example)
##

server {
  listen 443 ssl;
  server_name social.vinzv.de;

  index index.php;
  root /var/www/friendica;

  ssl on;
  ssl_certificate /etc/nginx/certs/social.vinzv.de.crt;
  ssl_certificate_key /etc/nginx/certs/social.vinzv.de.key;
  ssl_session_timeout 5m;
  ssl_protocols SSLv3 TLSv1;
  ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
  ssl_prefer_server_ciphers on;

  # allow uploads up to 20MB in size
  client_max_body_size 20m;
  client_body_buffer_size 128k;

  # log files
  access_log /var/log/nginx/social.vinzv.de.access_log;
  error_log /var/log/nginx/social.vinzv.de.error_log info;

  # rewrite to front controller as default rule
  location / {
    rewrite ^/(.*) /index.php?q=$uri&$args last;
  }

  # make sure webfinger and other well known services aren't blocked
  # by denying dot files and rewrite request to the front controller
  location ^~ /.well-known/ {
    allow all;
    rewrite ^/(.*) /index.php?q=$uri&$args last;
  }

  # statically serve these file types when possible
  # otherwise fall back to front controller
  # allow browser to cache them
  # added .htm for advanced source code editor library
  location ~* \.(jpg|jpeg|gif|png|ico|css|js|htm|html|ttf|svg)$ {
    expires 30d;
    try_files $uri /index.php?q=$uri&$args;
  }

  # block these file types
  location ~* \.(tpl|md|tgz|log|out)$ {
    deny all;
  }

  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  location ~* \.php$ {
    #fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

    # With php5-cgi alone:
    fastcgi_pass 127.0.0.1:9000;
	include /etc/nginx/fastcgi_params;

    # With php5-fpm:
    #fastcgi_pass unix:/var/run/php5-fpm.sock;
    #fastcgi_index index.php;
    #include fastcgi_params;
  }

  # deny access to all dot files
  location ~ /\. {
    deny all;
  }
}

